from itertools import chain
import itertools
import numpy as np

sequence="CAGATCGCCCATATTCGTGAGCGTAACGCTGGAATAACCGCACAAAAGACTATACGGTAGCGTAACGCTGTGAAGAAAACTTATCATAGATCGCGTAACGCTGTATGTTCTACCATGCACGGTAGCGTAACAGCTGAACTTGATGTCCGAGCTAATATTCAGCCATTCTCATGAATCCGGCGCCACGCATCGAAACAGAA"
n=4
I=16
d=4

def unique(x):
    unique_list=[]
    for i in x:
        if i not in unique_list:
            unique_list.append(i)
    return unique_list

tmp=["CCGTAACTG","GTAATGTCT","CTGCTGGAA","TAACTGCAG","GGAGGTAGA","AGGCTAACC","GTAAGATGC","CGTACCGCC","TCGGTAACA","GTAACAGTA","CGTGTAGGA","GAACGCCGC","AGCTAGACC","CCTAACACT","AATGAAACC","GTATCAGCT","CGGTGAAGC","TAATCCTGG","GGCGTAAGT","GGCGGAACG","CGAACGCCT","AACGCGACA","TAACAGTCT","GCGATACGG","CGATCTGAA","TACCGCTGC","AACGCTAGT","AGCGTGACA","GGCGTACGT","AGCGCAATC","GTCGTTAAC","GTAATGATG","ATCGGAACG","GTGTAATAA","TATCTCTGT","AGCGAAGCT","CGCTGAGGA","CCTACGCTC","CGCATGAGA","CGGTACGCA","CGCAAAGCT","GTAAGCCGC","CGATAGGTC","GGCGTATCG","GTAAAGCGA","AGACGCTAA","GCTAACCGT","AGAACGCTG","CGCACGCTC","GCGTACCGT","GCGAACCAG","GGAGGTAAA","AACCTGATA","ATATATCCG","GCGTAGCGT","AGACGGTGT","TAACACCTG","AGGCGAACT","TTCATCGAT","TCAGCTAAC","CGAACCGCA","CAGGAACGC","CCTAACCGC","TTCTCGAGC","TAGATGCTG","AACGTAGAC","TACGGTAAG","GCGGTCAAC","GCGAACACA","GCGGTAACG","TAGACGGTA","AGCGGAGCG","TAACCGCAG","AACACTAGA","CAGTAAAGC","TTAACTCTG","CTATCGCTC","ATGAATCGC","CTATATGTT","CGACGCTCG","AGACGAACA","GTATCGCGC","AGCGTCATC","CGTGGAAGT","GGTAACCAT","CGCAAACGC","CCTGTAATG","GTCTAACGT","TCGTGAACA","TGATACGCT","GTATCGCGT","TAACTATGC","GCTGAGATA","AGTCGTAGA","GCCGAACGT","GCAACGGCT","AAGGTCGCG","GGAACTCTG","CGCTACGCT","TCATCGTAA","CGTAGCATC","TAAACGCGG","AGGTCAACT","TACGCATGA","GCAGAACGT","AACTGGCTG","CGTGTAATA","TAACAGCGG","TGCAGTAAC","TAACCTGTA","AGCGTAAAG","AGCTAACGC","AGCATAATC","CTGAATGTT","GAGTAACAC","CCACGAATC","CGTGATACG","AACGTGTGA","CGCATTCAC","GACGTAAAC","CGAACGTTT","GGAGGTAGG","GATAGACGT","AACGGTGAA","CGTGAAACG","GTGACGCTT","GTAACGTAC","AAGCGTATA","GCGAACAGA","TAACTGCAT","GACTAACTA","TAACGTACG","CTAACCTGG","AAACTGATC","GGAGCTATC","TAACGTCAT","AGACCGCTG","TAAAGCTTG","GGCGTAAGG","TATATCCGC","CGAGTAAGC","CGGAGCTAG","TATATCGCG","GCGTACAGA","GCGCAACTC","GTGACGCTC","CGTGTAAGG","GCGTCACAC","GAACACTGC","AACGCGGTA","TATCGGAGT","AACGCTCGT","AGAGTACGC","GTGAAAGCT","TAGTCGTGA","AGCTGTATA","AAACACTGT","TTAACTGCT","TATTCTACC","GCGTAGATC","AGATCGCTG","GCGTAAGTA","CTGTAAACG","GCGGTATAC","TAACAGGCT","GTAACAGTT","CAGTGTAGC","CTGGAACGC","GAACGTGAT","TCAACACTG","GTAAAGTGA","GCACGCTGT","AGCGAAACC","CGTCAACGC","TTACGCTGA","TATAACGCT","GCAGTATCG","CGTTAACCA","AAACGCGTG","AACGCGAGA","GCGACGCGA","CTAACGTAG","CATAACGTC","TCGAGTAAC","CGTAGTCGA","GCGTAAGAT","GCGTATAGC","TCAAACGCT","GCTGTGAAC","CATAATACG","AGCTAAGCC","GAACGCCGA","GTACGTGTA","GGTAACTAG","CGTACTGCA","CTAACGTGT","AATACACGG","ATCGGAGCT","CTAGACGCA","TAGACGGAA","ATCGTAATA","GCGTCAAGC","GAGTATCGC","TAGCGCATG","ACGATAGAC","AGATCCGGC","AGCGAGACT","TACCGCTGG","TCGGTAACC","GATGGTAAT","CCGCTAACA","GGTACGCCC","GAACGCGAA","ATGAGTCGC","CATGAACGT","GCGTACGTG","TATCGGAAC","AAGATAGCG","AACCGCTCG","AGTCGCCTA","ATACGCATG","AGTCTAACC","GTAGCCTAA","GTATCGTGC","ATACCGCTG","GCAGTACAC","AACGCTGAG","CGTGTAGTC","AGCTAAACG","TATCGCTGT","AGCTAAGCA","CGCTGAACT","CAGTACGCA","TAGACGTCT","GTAAAGCGC","TTATGCGTA","GTAACCGCT","CGAACGCTC","TATGATCTC","GTAACGTGG","AGCATTAAC","CGTGTAGGT","GTACGTGTC","AAGCGATAA","AACACTAGT","AGTCGATAA","GCAGTAGCG","ATGATCGTC","GTATCACTG","TAGACCTGC","GTAACCTTG","AACGGCTAT","GTAGCAGTA","GCGTATACG","GTAAAGATG","AAGAATCGC","GACGTAAGA","AGCTAACGG","GGAACGCTC","GAAAGCTGC","TGCGCTAAC","GTAACGCTG","CGCTAGGTA","AGACGCTCT","CGTACCTGA","AACAGGCTG","CGTGTGAGC","CTAACTCTA","GGTAAGCAG","GCGAACGAC","GTGGTAACG","CGTAGAGTC","AACAGCGTG","ACGATAGCG","CGAACCTTT","GTAACCGTG","GTACTGCTA","TAACGTGTC","GTAAAGTGC","TCAACCTGC","CTATCGCTG","GTAAAGCAT","CGATGAAGC","AGCCTAAGA","AACGATAAC","GTAACAGTG","AAGTGTAAC","TAATCGCAT","GCCTAACCG","TAATCCTGA","TAAGCTGCT","GGAGGTAAG","GCGTATATG","GTAACCGAT","GAACGTGAG","GCGAACAGT","AGCAGTAAC","GTAGCCGCT","GCGTAGCGC","CTGTAACTG","CATAACGTG","TCACCATAC","CGGAACGAT","GTACTGCTC","TCAGCGAAC","AAACTTCAT","AGCAGTATA","GTAATGCCG","CGTACACGC","TTGCGTGAA","CGCTGATAA","GATATACGC","AGCTAATCG","TGAAAGCTG","TAACGACTG","GTACCGCTA","CTAAAGCTC","TGAACGCGT","GCGTACGAT","TTTCACCAT","GGGTAACGC","ATGATCGAT","TATCCGCTG","AATCGTGTA","TGGCGTAAC","TAACGTCAG","CGATGTAAT","TACGCTGGA","AGCCGGTAA","TGTACGTAC","GTTAGCGCT","TAACCGTCT","TCAACTCTG","CTGTAACCA","GCCTAAAGC","TAACTGCGT","GCGATAAAC","GCGGAAACG","GCATAACCA","ATCGAACGC","TAAAGCATG","AGACGAACT","CGAACTCTC","ACGATGCGA","GCGGTTAAC","GCGATAATC","CGAACCGCT","AGCGAGACA","CGGAGTCGA","GGAACGCTA","GTATCGTCT","CGAACGCTT","TTAACGCTG","AATCGCTCT","CGATCAACG","GTATAAGCT","ATCGCATGT","GGACGCGTT","AGGCGAACA","CGCATGAAC","TAACGTGGT","TAAACGCTG","GTAACAGAT","ATCGTAAGC","GCTATCGCG","ATATACGCG","AGCTGAACA","GTACGCTGT","GCCGTACGT","AGACGTGTA","GTGACGCTG","GATCAGCGT","TAGGTAGCG","ATACGCTTG","AACGCTGTA","CCATAGAAT","TACCGCTGT","GTATACAGC","GCTGTATCG","AGACGCCTG","CTCTGAATG","GTAACTCTG","GGAGGCGTA","GTCAGTAAC","AACGGTATG","CCATGATCA","CGCCATGAA","GGAGCGAAG","TAACCTCGC","CCGAACGCA","TACGCTGAT","CGCACGCTT","CATAAACGC","AACGCTGAT","ATATCCGCC","TATCGGTGG","ATTCGCGAG","GAACGCTTG","CTATCGCTA","CGAGTAACG","GCGTACAGC","GTGAACGTC","GTAACGGTG","AATCTGCTG","AACGCCGCA","TTAGCCGTA","CCTAATCGC","GAGGAACGC","AGCGACACC","TCAACGATG","GTAAAGGTG","AGCGTGAAC","ACGCGATAG","AGTATCAGC","GACTAACAG","GTAATCCTG","GCGCTATAC","CGTGTAAGA","GGACGAAAA","GCGCTAAGC","AACTAACGC","CGCTGAGCA","AGCGTGAGC","GTAAAGCCT","TGAACGCGA","TAACCGCTG","GCTTAACGT","CTCAACGCA","TCAGCTAAG","TAGACGCGA","TTAGCGCAA","CGAGCGAAA","GCGTACCAC","TAGGTAACC","GTGAACCTT","CGGTAACCC","TGACGCGTA","GTAATCGTT","GCGAACTCG","GCGAACACT","CGTACACTG","CGTACCTAT","GGGTAACGG","TGGCGTAAT","AGGTAAGAT","ATACTGCTG","CTGATAACG","CCATGAAGT","GGAGCCGTA","ATGCGGTAA","AACTATATC","CGTAAGCGG","CTAACGCAG","AGCATACGC","GTTAACAGC","GTACGGTGT","TTATCCATG","GCGCAGCGC","CCATGAAAT","CGTAAGCCG","TAGTCGGTA","AACCGCTAG","AACGTAAAC","TATCGTACA","TGAGGTAAC","GTACGCTGC","GTCAAAGCT","AGTGTAGCG","CGAACGCCG","CGAATCGCA","CGTACGATG","CGACCATCG","CTAATCGCC","CATATCGCT","GCGAACTCT","GCGTACTGA","GTGAACGTT","AGGTAACTG","GCGTACTGC","GAACGCAGT","TTAGTCGTA","AGCCTAAAG","AACTAACGA","CATCGAACT","GCAACCGCT","AGCCGTAAC","TCAGCGTTA","GTAACGTCT","AACGTGAGG","CTATACGCG","GCGATAAGC","TAAACAGCT","ACGCGGTAA","GAAGCGCTA","CTAAAGCTT","GAACGCGCT","TGCGGTAAA","GGTAACTAA","AACGGTGGA","ACGTATGCG","AGCGATATA","GGAGCGCTA","CGTAAGCGT","GTACGTGCT","CCATGAACA","TATCGCGTG","GAACCTGAA","CTACGCTCA","AGGTACGCT","TATAAGCTG","TGAGGTAAG","GCATAACGC","AGCGTAGCG","ACGCGTCAG","GAACTCTGA","CGTACCGCA","CTATACGCT","GTCGATAAC","ACGCTGCAA","AGACTGCTG","GCGTGAAGT","AGGTACGCA","GTACGGTGC","AAGAGTAAC","GCTACGCCT","AACGTTGTC","TCCATGAGA","GTAACACCG","AGCGCTATC","CGAACGTTA","GTAGCTAAT","AATCAGCTG","TGTGTAACG","AGCGATAAC","GTAGACGCT","GGTAACTGA","CGCTGATCA","CCGGAGCAA","GCTAACTCA","TATCGGCTG","CCTAACGAC","GTCGTCAAC","GTCACGCTA","CTAACCTGT","AGGTATCGA","CAGAGTAGC","CGTAAGATG","GGAGCTACA","GTAACGCGA","AACGCGTGT","CGTATAACG","CTAACACTC","AGCCTGAAC","GAACGTGTA","CCTATATCG","TGCCGGCTC","CGCAACAGC","GTGTATCGC","ATATCGGAA","CGTAACCGC","TACGACTGC","TAACGCGTC","AGCTAAACC","GGACGCGTG","GCGACGCAT","CTGATATCT","AACAGTAAC","GCACGCTGC","GCTACGCAT","AACTGCGTG","CTACGCTAG","CCATGAAGC","GAATACACG","GCGTTAATC","TGAGGTAAA","TAACCTTGA","GCGGAAGCG","TAACGGTGG","GCGCTACGC","CGATGCGAA","AGCAGGAAC","GCGAACCTT","AACGCGGCA","CACCATGCA","TGCCGGAGC","AGGCGAACG","TATACGTGT","GTAGCGAAT","TAACACGTG","AGTCTAACG","CGTCAGACG","CTAACCTTC","GGTAACCAC","ATCGTATAC","CGTACGATC","AGCCGTATC","CGGCTAACG","GTATCGGTG","TAGACGACT","AAGCAGCTG","CGTATCCGC","CTATGAACG","GATATCGCT","AGGTAGCGA","AGCTATAGA","TGGCGTAAG","GCGAAAGCC","TACGGCTGG","CTACGCTCC","GCAACGCTG","TAGCAGCTG","GCTGAGCGT","CGTAAGTAT","AACGTGAGC","GACGCTGTT","TAACCTCGA","AGCTAAGCG","GTAAGCTGC","GGTCGCGAG","CGTCAACTG","AACCTGTGA","GCGCAACCA","GAACGCCTC","CGAACCTTA","CGCATGCAA","GATAACTGC","GTCGTAAAG","GGTCGCTAC","GATACGCTT","GCTAATCGA","TAAACCGCT","CTGTAACCG","TGCGCTAAG","GTAACTGGT","ACGGTAACA","AAACTGCTG","TAATCGCCG","GAGCAGCGT","AACCGCCTG","ATCGGGTAG","CGAACTCTA","GAACGGCTA","GTACACCGC","CGTAAAGTT","AGCGATAGA","GGAACACTG","AGCGAAGCG","AGCTAACTG","GCTAGGTAA","AACATCAGA","CGCTCGCAT","GTAACGCAG","GTCTAACGG","ACGTAACGA","CGCAACTGC","AACGATCGT","GGATCGCTG","AGTGTACGG","CGTATGCGT","AATATATCG","CTAAAGCTA","CGTACCTGT","CCGACGCCA","GACGTAAGC","GATAACGAC","CTATCGCTT","GGAGCAGTA","CATAGACGC","TGAACGTGT","GCATACGCA","GTAATCGGC","CGTATCTGC","TTAACAGCT","CTAACGGTC","TAAACGCGA","CTGATATCG","CGTACGCTA","TATACGGTG","GATAGCCGT","AGCGCTATA","GTAACCATG","CGTACATCG","AGCTAAGCT","GTACGCTTC","GACGTAAAG","AATCGCGCT","GTGTAGCAG","AAGCGAACG","CTACGCTCT","CGTAACGCT","GCTAACCAA","ACGGCGTAA","CATAACCTC","CCAGTGAAT","GTTAACTGC","CGCCATCTG","CGTAATCCC","AGCAGCTAA","CGTACCTGC","CGGAAACGC","CGAACGTTC","GAACGGCTC","CGTACCTGG","TTCACATAC","ACGCGTATA","AGCGAGACC","GGCCTAACG","TACTGCTGT","GTTAAAGCT","AGCTAAAGT","AAGCACTGT","GTATCGTAT","TACGCTAGC","AGCTAATGA","AGCGAAACG","TAGACGCCG","GTAACCAGC","GTAACCATC","GCGAACGCC","CGTAGACGA","TAGACGGTG","ATCGGTCAG","AGACAGCTG","GCGCTCAAC","CGGAACGAC","CGGAGCTAC","GCGCTAAGT","GTACACGCT","GAACGCGCC","GCGAACCAT","GCGTTATAC","CGTGAAGCG","ACGCCATGC","GATAACGTT","GATAACGTG","TGCGCTAAA","TCAACTGCT","CGGTACGCT","GGAGCGTTA","GCCGAACGC","CGCTGATAT","CCTAGACGC","CGGAACTGC","AGACGAACG","CCTGGAACT","CGCAACCGC","ATTCGCGAT","CGTCAAGCG","GTAACGTGT","TAGGTAACA","GCTAGTAAT","GAAAGCTGG","AGACGTGAA","AGCGTGAGA","GGTCGCGCA","GCGAACGCT","GTCGTAAAC","AGCGCTGAG","CATTATATC","TACGCGTGG","CTCCATGCA","TGAACGTAA","CTAACGTCG","GACTGTAAT","GTGAACGTG","CGCTTAGCG","TCGCATAAC","TAACAGTGC","CGGCTGCGA","GCAACTGCT","GCAGTACGA","GGAGCTAGT","CCATGATCC","AGTGTAATC","CTAACTCTG","GTAACAGAC","CGCGATGAA","GTAACGGCT","TCAACCGCT","GATAGACGC","AAGCAGTAA","CGAACGCTG","CGTACACCG","GAACGCGAC","TCAGCAGTA","TGAATCGCT","ACGGTAACT","ACGCGTTAA","ATTCGCTAT","ATATCGGTG","AACCTGATG","TTTCACCAC","AACGCGAGG","TTCATGCAT","AGCGTCAAC","CATAACGAT","GTAACGTGA","GACACGCTA","CAGGATAGC","GTACGGCTA","GTAACGCGG","GTGAACGCC","GCATACGCG","CTAACCTAT","AACGCGAGT","AACGTGAGA","ATGTCGTAG","TAATGTGTC","CGGTACGCC","CTAACCGCG","CGCTTAACA","AACCGACTG","ATGGTAACC","GTAACTGTA","AGCAGTATC","TATCGGAGC","ATATCGGAC","TCGGTAACT","GAGCGCTGA","CTAGTATCG","GTCAACAGC","GCGACGCTC","CTAACGCCT","CGGTACACG","ATCGGTACG","AGCATGAAC","ATCGCTAAC","CGTACATGC","GCAACGCAT","GTAAACTGC","CTTCATGCA","TACGCCTGC","TAAGCGGTG","ACATAACGT","CCGCGTAGC","CGAACAGCG","CGTCTGAAG","CGGTAATCG","GCGTACCAA","GCCGTACAC","GTAACACCT","AATCAGCCG","GTGTAACTC","ATCTGTAAC","GGAACGCTT","GCGTACCAT","CACTGGAAT","ACGCTGAAA","GTAAGTCTC","CGAACGCGA","GCGGAACCG","AGACGTAGA","GTACGTCTC","AACCGTAAC","GCGAACCAA","GCGCATCGC","GACATAACA","CGGAGCAGC","CTAACCGCA","CTGTCAACG","AACGCGATG","ACTAACGCG","GCGTACCGA","GACATAACT","TACGCTAAC","AACCATGTC","TAACGTTGG","GCGGTACAC","GAAGCATAA","TAAAGACTG","AGCGAATGA","GCGAACAGG","CTGTAATCA","CGTGAACAC","CGCGCTAGC","AGCGAAAGC","GTATCGCCG","AGCTAATCC","AAGCGTGAA","TAACGTTGT","GTAGCGTAA","GGAGTCGTA","CTAACGTGC","TACTGCTGC","ATCGTAGCT","GTAATCTGC","CGGTATACG","CATAACGTA","GCGATACAC","AACACTTAT","GCTAGACGA","ACTCATCAG","TTTCTGCCA","TACACGATG","GCGTATCTG","AGCTATATC","CCTGTAATA","GCGTACTGG","GCGAACCTC","GGAGACGTA","GCGTACCAG","GAACGTGAC","GAACGCTGA","CGTACACAG","GTAGACCGC","AGCGAAGCC","TACGGCTGT","TATCGGTGA","GTGACGCTA","TACTGCTGA","ACACTGCTG","GCTAACAGA","TATACCTGC","TAACGTGAT","GTGAACGAC","GCTGTAAAT","GAGTACACG","AGGTATCGT","CCGCTGTAA","AGCTGCAAC","CGAACGCGG","TACACGTGC","TAGACGTGG","GGTAACAGA","GTGTAGTGT","CTGAACGCC","GTAACGCGC","CAGGAGCGG","CAGGTCAGC","AGACGGTAA","CGCATGAAT","AGCGCTAAC","CTACACGCG","GTTAACACT","TACGCGTCA","AGCCGTACA","ACGGTAACC","TAGAATCAG","AGGTAATCA","GTAGCTGCT","ACTATATCG","ACGTCGTAA","GTAACAGGC","CTAACTCTC","GCAGTAAAC","TAATCACGC","TAACTGCTG","AGCGAAACT","TAACGTGGA","AAGCCGCTG","ATATCGGCA","GAGTAACCG","GCATCAACG","TAAGACTGG","GCCTATCGC","GCTACACGA","CTAACCTGA","ACGCGATAA","CCGTAACCA","AACGCTGCA","AATCGGCTG","GACTAACTG","CGCGTGAAT","GTAAAGTGT","GTAAGCGCT","AAGCGAACA","TAACAGATG","GGAGCTATG","GTCAACACT","GCGTCAGAC","CCGGAGCGG","GTCGAACGA","GCGCTAGAC","CGAACGTTG","AGCTGTACT","ATTCATCGA","TAATCCTGT","CAGTAACAC","TATACGCGG","TTGCTAACC","CTCGATGCA","AGCGCAAAC","TTAGACGCT","CGGAACGGC","CCGTAACCG","AGCCGGAAC","GTAACGTGC","CAGATAACG","AACGACTTG","TAAACTGCT","GCTGCGTAA","GGCGTAACG","GCGTAACGC","GCTCGCGTA","GTCGTACAC","TAGCCGCTG","TAACGTACC","GTAACGCCT","AAAGCTGAG","GCCGTAAAC","ACACCGCTG","CGACGCTCC","AACAGCTAT","GAACACTGT","GTGTAACAG","CATCAACGC","GAACGCTGG","GCGTACCGG","CGCACGCTG","CTGTAACCT","GCACGCTGG","GCGCAACAG","CGCTAATGC","GCGACGCTT","GCGTACGCC","TAGACGTAA","GTACCGCTT","GTGTAACGC","GATAACGGT","GAGTAACGT","ATCGTATCG","ATGATCTCG","CTAACGTAA","AGCGACACT","GCAACAGCT","GCACGCTGA","AGACGTAGC","TAGCCGGTA","AATCGGTGT","TATACCTGA","GGAGCTAGA","GCTGAACGA","GATAGTCGT","GCGAAAGCT","GGAGCGAAC","GAACGCTAT","TAATCACTG","TTACGCGTA","AATCGCCTA","GTGAACGCG","GACTAACAT","CTAACCTTG","GCGTACAAG","AACACTGTA","GGAAAGCTG","CGTAACCAG","GGATGCGTA","ATCGCTGGA","GAGGTAGCG","GTGAACCTC","CCGTAACAG","TTATACGCT","CGATACGCT","CGCACACGC","AGACTAACG","TAAACGGTG","GAGCGCTGT","ATGCTCGCG","GGAGCTACT","AATCCGCCC","TAACAGTGA","CTAACACTA","GTACACAGC","GCGTACATC","GTAACCGTA","CAGGAGCGA","AACCTGTAC","CTGAATCAT","GGGTAACGA","ATGTCACCG","TCACGGAGC","AGCGTGATA","GCGATACGT","TACGCGTGT","TATACGCCT","ATGATCGGT","GTAAGACTT","GGCTGAATA","GCTAACCAT","ACATAACGC","GGCGAACGT","CGCAACACT","GTATACCGC","GCCGTGAAC","GTAATGTGC","ATTCGAGTA","TAGAAGCTG","GTAAGTGCT","GGCGAACGA","AACAGCTTA","GACGAACGG","AATCGCATG","GAACCTGAC","AGACGCATG","CGCTGTAGA","CGAACACTC","GGCTGTAAT","ATATCCGCA","ACGATAACG","ACGCTAGTG","GGAGCTAAG","GTATACGCT","GCAGTACGT","CCGGTGCGA","GGAAGCGTA","ACAGTAACC","GGAGCGATA","AGCAGCAAC","ATGCAGTAA","CGCTGAGAA","TTGCGGTAA","CGATAATCA","TAACCTTGT","AACAGGTAG","GCGCTAATC","ATATCGAGT","CCGGTAACA","CGTACGCTC","CTGCTGAGA","TAAAGCTCG","TAGACGCGG","TAACGACAG","ACTCATCAC","GTAACGATG","TAACCGTGA","AACGCGGAA","GTAAAGCGT","CTCTGTAAG","GCCGCTAAC","TACGCGTAA","GCTATCGCC","GCTGAGAGT","TAAGCAGCT","GTCAGCGTA","GCGAACCAC","AACAGTCTG","CATAACCTG","AACAGCCTG","AACCTGGAC","TTAGCAGTA","CGAACCTTG","CCTAACGTA","GAGTAGCGT","CTAACGGTT","GCGTATCCA","GCTGAAGTA","AGACGCGTG","TACCGCTGA","GTCAACCGC","AACGCGAGC","CGTGACGCG","GTATCCGCT","GTTGCGTAC","GTACCTGAG","CTAACGTAT","CTGATATAT","CTAACCTTA","ATGAGTAAC","GTAGCTATA","CTAACGTGA","GGTCAGCGT","AACGCGTAT","GTAAAGCTG","CTATGAAAT","GTCGTAGAC","CGTAGCTAG","CGGTCGCCT","ATCAGTAAC","CATAACCTT","GCGTCAAGA","ATGTGTAAC","AGGCTGTAA","ACGATAGAG","GTATCGCAG","AACACTGCA","GAACAGCTC","ATGCTAACC","GCCTAGCGC","CGTACGCTT","CGTACGCCT","ATACGCGTG","CTAACAGCT","CGCATACGC","CGTCAAAGC","AGCGCTGAT","CGTTAACTG","ATCGGTACC","GAGTAACCA","TCAAAGCTG","TAACCGCGG","CATATATCG","TAGCAGGTA","ACGGATCGC","GTGTAATGC","CGTAAGATT","CGACGCTCA","TATACGCCG","AGACGAACC","ATCGGATAG","AAGCGTATC","CTAACGTAC","CGTAACAGC","CCTAACGTT","CGTATACGC","GATACACGC","GCGAAGCGT","GTAACTGTT","ATGATCGGC","TACTGCTGG","GTTAACCGC","CGAACCGCC","GAACCTGAG","GTCAGACGC","TGCGCTAAT","TCAACAGCT","GCATACGCC","TGAACGCGG","GGCTAACTA","GGAGGTAGT","GTAGCATAA","AACCTGGCA","GCCTACGCA","GCGAACCTG","ATCGGTATC","CGCAACGTA","ATGCTCGAT","GACGTAATA","AGCGAACAC","CAGGTGCGC","GGCTAACAT","GGAGCTACG","GCTAGGTAT","CGTAGACTG","GATAACGGC","AACGGTTAG","GCGTAGAGC","AGACTGTAA","GCGAACCGC","CTGATGATG","GGAGCGTGA","CGTCACACG","ACTGTAACC","TTAACCTGC","GTAAAGCGG","CGTATAGCG","CGTACGCTG","CGATATACG","GAACGCATA","CTAATCGCA","TATATCGAG","TAACGTACT","CATGATACG","TAAGCGCTG","ACTGAATAC","GCATGTAAT","GTAACCGTT","TGTGTAACA","ACGCTGAAG","CGGATGCGA","CGCTGAAGA","AAGATCAGC","GGAGCGCAA","AAGCGAACC","ATATCGGAG","AGTCTGTAA","CGCTACGCC","GTCAACGTA","CGCATGCAT","GTCGCGTAG","CGTGTATGC","GCGAACGCG","CGTAATCTG","GAACGCTGC","CTACGCTGC","GCGCTTAAC","GCGATTAAC","CCGGTCAGC","CGTCAACCA","GCAGTTAAC","CTAACCTGC","GTGTAACCA","TTCACATAA","GTAGCAGCT","CGTAATCCT","AGCATATAC","AGATCCGTC","ATAACGCTG","TAACGACAT","CGTTAAGCG","AAACGCTAG","AGCGATACC","GCGTACAAC","TACGCGATA","CAGCATCAA","ACGTATCGA","GCGGTAAGC","CAGGTAACA","GGAGCTGTA","GTGAACGGT","AGCAGTGAA","GTAATGTGT","AGCGCTTAA","TAGGCGTAA","GACGCTGTC","GCGTAACCA","AGCGAATCC","TGAACGTGC","GGCATAACG","TCAGACGTA","GTAACTCGA","ACTCATTCG","CGAACCTTC","AGCGCATCG","GGTAACCGA","CGAGCAGCG","TAACGCTCG","AGCGTGACC","TAACCTTGG","TAGGTACGC","TATGCGGAA","GCTATCGTA","GTATGCGTA","ATGTCGCCA","GACGTATCG","AGCGTTATC","CCGCCATCG","CGCATGTAA","CGTTAGACG","CGAACTCTT","CTGATGATA","CGACGCTAC","CAGTGAAAT","CGCAGCGCT","GCCGATAAC","GAACGGCTT","AAAGCTAGT","CAGCAACGC","GCGAACGGC","CGCCTCGTA","GTAACGCCG","CGGTAAACG","GTAACAGGT","TATACACTG","TAACGACGC","GCGTAACCG","GCCTAACTC","CGTAACTGC","AAGATCGAC","TAAAGCGTG","GAGTGAACG","TACGCGTTA","AGACGCTTG","CCATATATC","GTATACACT","TTCCGGAGC","TAGACTGCT","GTCGAACGT","ATACTTCAT","TAACGCTTG","AATCGCCGT","GATAACGTC","GTGTAAAGC","AACGCGAAT","GCGCACGCA","AACGCCTCG","ATGGTAACA","CTAACGTCT","CTAACCGCC","TCACCATAG","AGCGTATAC","GAACGCCGT","TACATAGCT","TAACCTGAT","CCGTACACG","AATCGCCTG","GAATGCTGG","GAACGCGAT","TAACGTTGA","TACGCGGAA","GGTAACAGG","GGCGTACGG","ATCGCTAGC","GTACTGCTG","TCAGGCGTA","CGAACGCAG","CTGTAGACG","GAACGCGAG","GCCTAACAG","TCAGCGAAA","CGCCTGAAC","GTAACTGCT","AGCGAAATA","GCAGTAAGG","TAAAGTCTG","AGCCGAACT","TAAACACTG","GTGAATATA","AACAGCATG","TAGGTAACG","CGAACGCGT","CGTTACGCG","CGTAGACCG","GTGTAACGT","TACACGCGG","CGAACGGTT","GGTAACCGG","AACTAACGT","CGTCAATCG","GCAACACTG","CTACACGCT","GTTAACGCT","TTCATACAT","GTTATACGC","CGCTGATCG","GAGTATACG","CGCCATCAC","TACACCGCT","CGTATGCGG","CATAACTGC","GCCGTAAAG","ACGACGTAA","GCTACACGT","CGATAACGT","CTGACTGTG","AGCGAAGAT","GCGTACGTT","AAGCTGATC","TGACACGCT","AACTGCCTG","TCAGCGAAG","GCGATACGC","TAGCTGCTG","TAAGGTAAC","CGAACGGTG","AGGCGTGAA","CGCCATGAT","AACGCATTC","CCATGAACC","TATGCGTGA","TATCGTACG","GTAAGCAGC","TGAATGCTG","CGGATCGCT","TAGAGGTAA","ATGCGCTAA","CCATGAACT","TCGGCGTAA","AAGCGAACT","TAAGACTGC","GAACTAACT","CTAACGGCA","TAACAGACT","TAACAGCAG","ATCGGTACT","CGAACACTT","TAACCCTGC","GAACACTGG","CGTATGAAG","GCGATAAGA","GAACCTGGC","CGTAAGCGA","TTCCGATGC","GCGCAATAA","CGTTAAAGC","AGCCTTAAC","TTAGCGGTA","CAGTAACTC","TAACGTTGC","CAGTGAACA","AACACTGAA","AACGACTGT","TACGCTAAG","GCGATATAC","GCGTATAGA","ACGCATGTA","TACACGCGA","GTAAGACTG","TGGTAACTA","CGTAAAGAC","GTGCTAACG","GCGTACGGT","CGGAAAGCT","CTAACAGCA","AGCATAAAC","CGGAGCTAT","GCGATAAAG","TAATCGCCT","CGAGTAGCG","CTAACAGCG","GGCGAACGG","GGAGCTAAA","TAACCGACT","GGAACTGCT","GCGAACCGG","GCGTTAGAC","GTAAGACTA","CGTAGACTC","CCATGAACG","CTAAAGCTG","CAGGAGCGT","ATATCGGTA","ATCGTAAAC","CGCACGCTA","GCAACGTGT","CAGTACGCC","ATATCGGCC","TAACAGCTG","AACACTGGA","CTAACGGTG","CGAATCGCC","GGTGAGCTT","TAAACCTGC","ACTATTCTA","TCACGTAGC","AGGTAGCGC","TAACGTAAC","GCTGTAGCG","GATGCGAAG","GGTAGACAG","GATGCGTAA","CGTAGACAG","AGCTGGAAC","CAGTTAACG","TAGCGTAGA","TGGTAACAA","ATCGGTCGC","GTAACAGTC","TCAGCGTAA","AACGCGATT","AAAGCTGTA","CGTAAAGCT","GCGAACCGT","CTGCCATCG","GCGTACGTC","CTAACGTCC","AGCGAAGTA","CGCGTGAAC","TAACGCTAA","TAACACTTG","GCATAAACG","TATCTGCTG","GCGAACCTA","GGTGAACGA","CAGGTACGC","GTGCAATAA","GTACGGTGG","CTACGCTCG","TAACGCGCT","GTAAACGCT","GCAGCGTAA","GCTATACGG","CGGTAATGC","AGGTATCGG","TACGCGCTA","CATGATGCG","ACGCTGTAT","CGTACTGCG","AACGCATTG","TGACGCTGT","CCGTAAAGC","GCCGTAATC","CGTTAACGC","CGTTATACG","ATCGGTAGC","CGTATCGGT","CTAACGGCT","GTAAAGTGG","GTACGCGAG","CGGTAGCGC","CTAACGATT","AGCGTTAAC","CGAAACGCA","TTAACACTG","GACGTAATG","GTCACACGC","CCTAACGAT","TATCGTGTC","AGCTAATGT","TTAACCGCT","CGTAACCAT","GTAACACTG","TAACCTGGA","GCGGTAAAG","AACCTTGTC","AACAGACTG","ACATAACGG","ATTCGTGTA","CCTGTAATC","TAACGGTTA","GCGTATCGC","GCTCAGCGT","CAGTAGACG","GCGTGAAGA","CGGTGCGAA","CAGTGAAAC","AGTCATAAC","CGTAGACCA","CCGTAACGC","AACCTGCAC","CGTAAGCCA","GTACCGCTG","AGGTTAACT","AGCTGTAAC","CGAACAGCT","GCTCAACGT","CAGTACGCG","CGCCATCAT","AACGCATCG","TATGTCATG","CGTAGACGT","GATAACCGC","GGAGGTAGC","AGAGCGCTG","GCGAACACG","GAGTAACTC","TAACAGCAT","GTACCGCTC","CGAAAGCTT","GTAAAGTCT","AACGGCGTG","AGCAGAACT","TAACCAGTA","CGAATCGCG","CTGTATCGC","ACGAATCGC","GCGGAACGC","CGTCAACAG","ATTCGCTAG","GCTAACCGG","ATCGAGTAG","GGCGTACGA","GTAACGCAT","CGTAAAGGC","GTCAACTGC","CGCCATCAG","TACGCATGC","CATACGCTC","TGCCGGCTG","GAACGCGTA","GTAACTGGC","CTAACGTCA","TCAGCGGAA","ATACGCGGT","AACCGCATG","CTACGCTGT","CGAACGCGC","CATGCATCA","GGTAATAGC","TAACCTGAG","GTAGCGAAA","GTGAACACT","GCGAACGAT","TAAGACTGA","TCAGCGAAT","AGCGAACTG","TATCGGAGA","TATCGTATA","CGAACCGCG","GAACGCGGG","CCGGTAAGC","GTAAAGCCG","CTGTAACAC","GTGTATCGT","AGACGCTGT","TAGCATAGC","GTAAACAGC","TACGGCTGC","AACACTGAG","ATCGTCGAT","AACGCATAG","GTAGCACTG","GCTAACAGG","GACGAACGT","CAGTACGCT","CCTAACGTC","CGTGTAGGC","GTACGGTGA","AAACTTATC","CGAGACGCA","CGAACAGCC","CGCCTGAAT","AACCTGTAT","GACGTAACG","CGTAAAGTA","TAACCGTGG","AGCGACACA","CGAATCGCT","ACACGCTAG","GAGTACGCC","GTAGCGGTA","CGTACCGCG","TAAACGCGT","GCGTAGAGA","TATCGGAGG","CGTACAAGC","CGTATAAGC","TACGGTAAC","ATCGGTAAG","AGCTGTAGA","GCCGTAAGG","AGCCTCAAC","GAACTAACA","CTAGTGAAT","TAACGCGGG","GCGAAAGCG","TATCGATGT","GAGACGCTA","GCGTAGCCA","GTATACTGC","GCGAACACC","TACGCTTGC","AGGCGAACC","CCGGTGCGC","GCGTTAAGC","TAGACACTG","CAGAACGCC","TAAGCGCGC","CGTACCGCT","AATCGCTGG","TTGCGTACC","TTGGCGTAA","ACGTCGCGA","CGTAAAGGT","TAACGTGTT","GTATCGCAT","GCGTTAAGA","CGTGAATCG","CCATGAGAT","TTAACGCGC","AGCTGTACA","GAACAGCTA","GCAAAGCTG","CGTAAAGTG","TAACGCTAT","AACGCGTTA","GAATCGCTA","CCTAACTGC","GTATCGCCT","GACTGTAAG","TAGACGCAG","TACGCTATG","TAAAGCCTG","CCATCGACA","AAGCTGCTG","CGCTGTAAT","TAACCAGTG","GCATAACCG","CGGAGCGAA","ATGCATAAC","TGAACACTG","AAAGCTTGT","ATGTCGCCG","CGTATCACT","CGCTAAACG","AATCGCTAT","TTTCTAGCC","ATCGTGTAA","GGAGCCTAC","TACACGCTG","TTATGATCG","CGCTGCGTA","ACGCTGTAG","GGTCGCGAC","GCCTAACCA","GTACGAAAA","ACGCGCTAA","CTGTACGCG","ACGCGCAAC","AGCAGTAGA","AACAGCTCG","TCAGTCGTA","TGCGAACAA","TTGCGTAGA","GCGTAGAAG","CGCATGCGA","AGCGTAAGA","GCGGTAGAC","CGTATATGC","ATGTCGCGA","CAGTAACCC","TAGACGTGC","GGAACGCCC","CGGTAAGAG","TATCAGCTG","GGCGTAGCG","GAGTAAACG","TAACGTCTG","GTGAGCGCT","CTAACGATC","ATCGCATGG","CGCTACACG","ACTGTAACT","ATGGTAACT","ATCGGAGCA","TAGAGTAGC","AGCATCAAC","TAACGCCTG","CATAACGTT","AGCTGTAGC","GCGAGCGCT","GAACGCTCG","GGAACGTAA","GAACTCTGG","TTTCACCAA","CGCTGGAAT","GCGAACCGA","TAAAGGCTG","TGAAACGCT","ACATCGCTG","GCCGTTAAC","AACGTAGCA","GAACCTGGA","AGCGAACGT","ATGTCGTAC","AGCTAAGTA","AGCTCAACA","GGAGCTATT","GAACCTGGT","GTAATCCGC","TAACCAGTC","GGTAACCAA","GAACGGCTG","ATCGGTACA","TAACGTGAG","GTAATCAGC","GCGACGCTG","TAACTGTCT","TAAGGTAAG","GCGTACGCT","CGTAATGAT","AACCGCTTG","GCATCGCTG","AGCGATACA","AGCGAAAGA","GAACCTGAT","CCTGTAAGT","CTCTGTAAT","GAGGTAACG","CGCAGTAGA","GTGAACGAT","GCTACACGG","TGAACGTGG","GCAACTCTG","GAACCTGGG","GCATAACTC","ATGGCGTAA","ATATCCGCG","GTAACTCCG","CTACGCTGG","GCGGTAAAC","GTCAACGCT","CTAACGATA","AATCGCAGT","TGAAGCGCT","TACGCGCAA","CGTAAGACG","AACGCGCTA","CGGTATCGC","CGTAGCACT","GCTAACCGA","GCAGTAAAG","CGTACTGCT","CCGTAGCGA","TCAACGCGC","TTATACGAT","GCGTCAATC","AGCTGTACC","GCGTACGGC","GTAATCGCT","TAACGCGCG","GTAGACAGC","ATACGATGT","TAACAGTGT","AACGCGTTG","AACTGCTAG","CTGGTGAGC","CGCATGGAA","TATAGCGCT","TTAACGGTG","GAATCGCTT","CGTACGCCG","GGCGAACGC","CTAACGTGG","ATGCTGTAA","AACGTCTAT","GGAGCTAAC","ACGTGTAAG","CGTCAAACG","GAACAGCTG","ACTATTCTG","GTACAAGCT","GGAGCGACG","AACGCAGAT","GACGAACGC","GCTGGAAGT","TCAGCGTGA","CGCTCAACA","TAGAGCGCT","AGCAGGTAA","CCTACGCTG","GGAGCGTCA","GTAAACCGC","GCGATAGAC","GTAACAGCT","GTAACTGTC","GCTCGTAAT","GTAACCGAC","CGTGGAAGA","CGCGGTAGC","CTGCGAACA","CGTACGCAG","TAACAGCGT","ATACAGCTG","AAAGCTGGA","GCTATATCT","GCCGTATCG","ACGCTGTAC","AACAGCTTG","GCGCTAACG","CAGTAACCT","CCATATCGC","TGAACGCTG","GCCTATACG","ACGATCACG","ATGATCGAG","TATTTCATG","TACGCTGGT","GACGCTGTG","CGCAACGCA","GACGCCTAA","CCGTACGCT","TAACGTTAA","GCGTGAATA","GCCGTATAC","GCACATATA","GCGTATCAG","GTAGGTAAT","TCAATCGCT","GCTGTAACG","GTCTAACGC","CTAACACTG","GATACGCTA","CCGGTGAGC","TGTCGTAAG","GTAACCGTC","TAATCGCAG","CGGTAACGT","CGCTCAGCG","CTGTGAACA","AACGGTGAC","GACGCTGAA","TAACTGCGG","GCGTAACAG","CGTAACACT","TAACACTCG","AGCGAGACG","CTAACGCCG","CATGAGAAT","GTAGCGCTA","TAACACTAG","TTCACATAG","TAGGTAACT","CGAAAGCTC","TTCATGACC","TTAGCATAA","CCATGTATC","GCGTTAAAG","CCGTAGCGT","TCAGCTGTA","TAAAGCTAG","GATACGCTG","AACGCATGT","CGCGATAGC","ATATCGGAT","GTAATCACT","TATCTCATG","GCTACGCCC","AGGTATCGC","CGATACACG","AGCGAATCG","CTGACTGTA","AACCGTCTG","GTGTGAACG","AGTGCAACG","CCATGATCT","TGCGGTAAT","GCGAAAGCA","TCAGCTAAA","AGGTAATCT","AGCGATATC","CGCTAGTCG","GCCGTAATG","CGTGAAAGC","GTAAAGGCT","GAGCTAACA","ATATCGGCG","CGGAACACT","TCGCGTAGA","CTATGAAAC","CGGAGCTAA","CGAACGCTA","AGCGTGATC","TAACAGTGG","TAGCGTAGC","TAATCGTCT","AGCTAACGA","GCTAACCAC","ACGTGTACG","AGCGGAAAC","ATCGGTTAG","TTAGCCTAA","ATCGGCTAG","CGCTAGCGA","GCGTACGCA","CCGTGTAGC","GCGGAACAC","AACGCTAGC","CGAACGGTC","AACGCTGGA","GATAACAGC","GCGTACGAC","GTAACACAT","CCTGGAAGT","TTATGCCAT","TAGACGCAT","CGTAAGACT","AGCGAATGT","TAGCGCTAG","TACATCGCT","GCGGTAATG","CGGAACAGC","TGGCGTAAA","GTGAACCGC","TCAGCGTCA","GCTACGCCA","CTAATCGCT","CGTAATGTT","GTCAACGGT","GTGATCGCT","GAACGCGCA","TAACTCATG","TAACGTACA","GCGAACAGC","TGAACGTCT","AGCTAAGAT","AGCGACACG","CTTATGATA","TGAGGTAAT","CATAACCTA","GGCGTACGC","CGTCAACCG","TAAGTGTAA","AGCGAAGAC","CTGTAATGC","TACGTGTGC","GACGAACGA","AACTGCTTG","TAACCTTGC","CGTAAAGTC","GTAACGACT","TAATGCGTG","CACTGAATC","AACGGTAAG","AGCTACACC","TCAGCTAAT","TTAATCGCT","GCATGAATA","ACTAACGGT","GTAGACTGC","GTAATCGGT","AACCGCGTG","ACGCATAAC","CAGCTGTAA","TACGCTGTG","GCGTATAAC","GCGTACTGT","TGAACGGCT","GCGTACGTA","GCTGAACAT","CGACGCTGA","CGCTAGCTA","TACGGCTGA","GTCGTAAGC","CGACGCCAT","AAAGCTATG","GCCGTCAAC","TTAAAGCTG","CCTGGAAGA","AGCCTAAAC","GTACACACT","AACGCCGAG","CATAACACT","ATCGATACG","GAACGCGGC","CATGCATCT","GCGCTACAC","GCGTATAAG","GCGGAACCA","GAACCTGTG","AACTGCTCG","GATAACGAT","ACGCGTGAG","AAAGCTGAA","CGGTAACAC","GTACGCTGA","CGTACTGCC","CCTAAAGCT","AGCCGTACT","GCGACGCCT","GCGTATATC","TCGTGAACG","TAACCTGCA","GCGAGACGT","ACGATGCGG","TATCGCCTG","AGATCCGAG","GTCTAACGA","CTGTTAACG","AGGTGAACT","GACGTCAAC","GCGGTAAGA","GTGTAACCG","TATGCGTAG","GCGTAAAGC","ATGCATGAG","ACGATCCGC","TAGCGCTTA","TAACCGTGT","CGAGACGCC","CCTACGCTT","CGTAAGCTG","TCGGTAACG","CGGAACGGT","GTATATGCT","GTGAACTCT","CGGAACCGC","AGCGCATGT","TTCACATAT","TACGTGTAG","CGCTAACGA","CTAACCTTT","GGAGCGCAC","ATGCGTGAA","ATCATAACG","AGCGTGACG","GGTAACTGG","AATCGCTTG","ACGCCTAAC","CGATAGCAG","AACGCAGAG","GCGCAAACG","CCTAACAGC","CGTATCGGC","AACTCTGGA","TTTCACCAG","GCTACGCGA","TAAGACTGT","AGCGCAACG","GCGTAACTC","ACGCTGGAA","GGAGCGGAA","CTAGACGCC","GCATGAACG","GTAAGCACT","GTGAACCTG","GAACGTCTG","GCGTTAAAC","ATGCGATAA","CGTGAGACG","GTAAGTGTC","GCGTACCGC","CATCGAACG","CGTATACCA","TAAGCCTGC","GGAGTGTAA","GCTGTAAGG","AAGCGGTAA","CTATAATCA","TAAGCCGCT","CCATGAAAC","GCGTCATAC","GGAACCGCT","AACTGTGTC","ATATCGGCT","GTAACACGC","GCTAGACGG","GGTAACGAG","GCAACGCAG","ATCGGAGCG","TTCATCCAT","AGCGTGACT","GTACGCTGG","AGCAGATAA","GTACGCTTG","TAGACGCCT","TCGCCTAAC","GAGCTGATA","TCGAGTAGA","TATACGGCT","GTAAGACTC","GGAGGTAAC","CTAACAGCC","GCGTATCCG","CGAGACGCT","CTAACCGCT","CAGCGTAGC","TGAACAGCT","AGGCTAACG","GTCGTAATC","CGTATCAGC","ATGTCGTAT","CCGAACGCC","CGTACACCA","GTTAACGTA","AGGTAGCGG","CGTATGCGA","AACGTACAC","AACGCGAAG","CTATGATTC","TAACTGGCT","CATGCATCC","CTGTGTAGC","TCGCGAACT","TAACCGCGT","TAACCGCAT","CTCTATGCA","ATGCGCGAG","GCTGTCAAC","CGAGTATCG","AAGATTCGC","AACGCGGAC","CGTAAGACC","CGTCACGCG","TGTCACCAG","ATCTGGTAG","CGTCTGAAA","CGTTAACCG","AACGCGAAC","GACGTTAAC","GGTAACTAT","CGACGCTCT","GCGTTACAC","CGTAAAGAT","ACACGCGTG","AACAGCTAG","GTACACTGC","GTAGACACT","GTAGGCGTA","AACGTGTAC","CGAACTCTG","CCTAACGTG","GCTGTTAAC","CGGTCGCCG","AACCTGATT","GCTGTAATA","ACTGTAACA","GCGCAACCG","TAAGCACTG","ATCGGAGCC","TAATCGACT","CTCATCGCA","GTAGAAGCT","TAGACTCTG","GCTAACTCG","AACGTGAGT","GGACGCGTC","GAACGTGTG","AACGCGAAA","GCTGGAACG","GTACGCTCG","AACTCTGCA","CCGTATCGC","TCAACGCTG","CGTTAACAG","AACTGTCTG","TACAAGCTG","CGTGTAGGG","AATACGCGT","CTAATCGCG","GATAGCCTA","GCGAATCGA","GCATATACG","CGTGGAACT","ACACAGCTG","AACTAACGG"]


print("step1")
com=[''.join(c) for c in itertools.product('ATCG', repeat=7)]
com=list(set(com))
print("step2")
tmp_com=[]
for i in tmp:
    tmp_com2=[x+i for x in com]
    tmp_com.append(tmp_com2)
com=tmp_com

#com=unique(x=com)
# possible=["A","C","T","G"]
# com=possible
# for x in range(0,I-1):
#     tmp=[]
#     com=list(itertools.product(com, possible))
#     joined_list=[]
#     for x in com:
#         tmp = x[0]+x[1]
#         joined_list.append(tmp)
#     com=joined_list

f = open('myfile', 'w')
for x in com:
    for_com=[]
    start_point=0
    #print(x)
    while start_point <= len(sequence):
        len_through_sequence=start_point
        error=0
        len_through_x = 0
        len_of_matching_string=0
        #print(sequence[counter])
        while len_of_matching_string <= I:
            if len_of_matching_string ==0:
                if (len_through_x) >= len(x):
                    break
                elif (len_through_sequence) >= len(sequence):
                    break
                elif x[len_through_x] == sequence[len_through_sequence]:
                    len_through_sequence=len_through_sequence+1
                    len_of_matching_string=len_of_matching_string+1
                    len_through_x=len_through_x+1
                    output_list="1M"
                    start_point=len_through_sequence
                else:
                    len_through_sequence=len_through_sequence+1
            else:
                if error > d:
                    break
                elif (len_through_x) >= len(x):
                    break
                elif (len_through_sequence) >= len(sequence):
                    break
                elif x[len_through_x] == sequence[len_through_sequence]:
                    len_through_sequence=len_through_sequence+1
                    len_of_matching_string=len_of_matching_string+1
                    len_through_x=len_through_x+1
                    if output_list[-1] == "M":
                        tmp = output_list[-2:]
                        tmp= int(tmp[0])
                        tmp=tmp+1
                        tmp=str(tmp)+"M"
                        output_list=output_list[:-2]+tmp
                    else:
                        output_list=output_list+"1M"
                elif (len_of_matching_string) == I:
                    break
                else:
                    check = 0
                    for t in range(1,n+2):
                        if (len_through_sequence+t+1) > len(sequence):
                            error = d+1
                            break
                        elif (len_through_x+t+1) > len(x):
                            error = d+1
                            break
                        elif error >d:
                            break
                        elif x[len_through_x+t] == sequence[len_through_sequence]:
                            len_through_sequence=len_through_sequence+1
                            len_of_matching_string=len_of_matching_string+2
                            len_through_x=len_through_x+t+1
                            tmp=str(t)+"I1M"
                            output_list=output_list+tmp
                            error=error+t
                            check=1
                            break
                        elif x[len_through_x] == sequence[len_through_sequence+t]:
                            len_through_sequence=len_through_sequence+t+1
                            len_of_matching_string=len_of_matching_string+2
                            len_through_x=len_through_x+1
                            tmp=str(t)+"D1M"
                            output_list=output_list+tmp
                            error=error+t
                            check=1
                            break
                        elif x[len_through_x+t] == sequence[len_through_sequence+t]:
                            len_through_sequence=len_through_sequence+t+1
                            len_through_x=len_through_x+t+1
                            len_of_matching_string=len_of_matching_string+2
                            tmp=str(t)+"X1M"
                            output_list=output_list+tmp
                            error=error+t
                            check=1
                            break
                        if check == 0:
                            len_through_x=len_through_x+t+1
        if error <= d and len_of_matching_string >= I:
            for_com.append(str(start_point)+" "+output_list)
        start_point=start_point+1
    #print(len(for_com))
    if len(for_com) == n:
        f.write(x+",")#+"\n")
        #for x in for_com:
        #    f.write(str(x)+"\n")
f.close()